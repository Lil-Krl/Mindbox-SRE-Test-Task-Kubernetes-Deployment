apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  namespace: production
  labels:
    app: my-app
spec:
  replicas: 4  # по нагрузочному тесту, 4 пода хватает для пика нагрузки
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      topologySpreadConstraints:  # распределение подов по зонам для отказоустойчивости
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: my-app
      containers:
        - name: my-app-container
          image: nginx:latest
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "128Mi" # минимальные ресурсы для пода
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "1"  # увеличено для безопасного старта пода
          readinessProbe: # проверка готовности пода к приему трафика
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:  # проверка, что под жив и работает
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: my-app-service
  namespace: production
spec:
  selector:
    app: my-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer  # обеспечивает внешний доступ к приложению